{"version":3,"sources":["webpack://Ankit Muchhala/./src/pages/talks.js"],"names":["TalksContainer","styled","Talks","location","useEffect","window","hash","el","document","getElementById","scrollIntoView","active","title","className","id","width","height","src","frameborder","allow","allowfullscreen","href","target","rel"],"mappings":"yMAMMA,EAAiBC,wBAAH,iEAAGA,CAAH,wPA2BL,SAASC,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SAS9B,OARAC,gBAAU,WACR,GAAIC,OAAOF,SAASG,KAAM,CACxB,IAAMC,EAAKC,SAASC,eAAeJ,OAAOF,SAASG,MAEnDC,GAAMA,EAAGG,gBAAe,MAEzB,IAGD,gBAAC,IAAD,CAAQP,SAAUA,EAAUQ,OAAO,SACjC,gBAAC,IAAD,CAAKC,MAAM,UAEX,sBAAIC,UAAU,eAAd,SAEA,gBAACb,EAAD,KACE,2BAASc,GAAG,mBACV,kDACA,2oBAaA,0BAAQC,MAAM,MAAMC,OAAO,MAAMC,IAAI,4CAA4CL,MAAM,uBAAuBM,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,IAE9O,6BACE,6BACE,0BACE,wCACA,gDAEF,0BACE,kCACA,2CAEF,0BACE,oCACA,0BACE,qBAAGC,KAAK,6DAA6DC,OAAO,SAASC,IAAI,uBAAzF,mEASV,2BAAST,GAAG,cACV,oEACA,sUAIE,0BACE,sDACA,wGACA,iEAIJ,0BAAQC,MAAM,MAAMC,OAAO,MAAMC,IAAI,4CAA4CL,MAAM,uBAAuBM,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,IAE9O,6BACE,6BACE,0BACE,wCACA,yCAEF,0BACE,kCACA,2CAEF,0BACE,oCACA,0BACE,qBAAGC,KAAK,0DAA0DC,OAAO,SAASC,IAAI,uBAAtF,gEASV,2BAAST,GAAG,mBACV,6CACA,yUAIE,0BACE,mLACA,sKACA,iIACA,4KARJ,6WAcA,6BACE,6BACE,0BACE,wCACA,4CAEF,0BACE,kCACA,2CAEF,0BACE,oCACA,0BACE,qBAAGO,KAAK,6DAA6DC,OAAO,SAASC,IAAI,uBAAzF","file":"component---src-pages-talks-js-5742104cc8931623c5f3.js","sourcesContent":["import React, { useEffect } from \"react\"\nimport styled from \"styled-components\";\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst TalksContainer = styled.article`\n  h4 {\n    color: var(--indigo);\n\n    &:first-of-type {\n      margin-top: var(--spacing-6);\n    }\n  }\n\n  ol {\n    list-style-position: inside;\n    margin-left: var(--spacing-4);\n  }\n\n  table {\n    margin-top: var(--spacing-6);\n  }\n\n  table, tr, td {\n    border: 1px solid var(--gray-300);\n  }\n\n  tr, td {\n    padding: var(--spacing-2);\n  }\n`;\n\nexport default function Talks({ location }) {\n  useEffect(() => {\n    if (window.location.hash) {\n      const el = document.getElementById(window.location.hash);\n\n      el && el.scrollIntoView(false);\n    }\n  }, []);\n\n  return (\n    <Layout location={location} active=\"talks\">\n      <Seo title=\"Talks\" />\n\n      <h1 className=\"accent-font\">Talks</h1>\n\n      <TalksContainer>\n        <section id=\"rest-to-graphql\">\n          <h4>From REST to GraphQL</h4>\n          <p>\n            Everyone says it is easy to layer GraphQL on top of REST.\n            Is it really? There are fundamental changes in thought\n            processes which are often neglected, leading to poor schema design.\n            This talk presents a structured approach to thinking in GraphQL\n            and designing user centric schemas. The primary goal of the\n            talk is to present a structured approach to thinking in GraphQL\n            with something I like to call \"Activities To Be Done (ATBDs)\".\n            I highlight a stepwise process to design a truly \"graph-based\"\n            schema. We will also see how this approach helps various personas\n            and facilitates in identifying \"control points\" for a schema.\n          </p>\n\n          <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ntgMQxFi0KQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n          <table>\n            <tbody>\n              <tr>\n                <td>Conference</td>\n                <td>GraphQL Asia 2020</td>\n              </tr>\n              <tr>\n                <td>Date</td>\n                <td>Feb 20, 2020</td>\n              </tr>\n              <tr>\n                <td>Slides</td>\n                <td>\n                  <a href=\"https://github.com/ankit-m/talks/tree/master/reactfoo-2018\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    https://github.com/ankit-m/talks/tree/master/reactfoo-2018\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </section>\n\n        <section id=\"secure-bff\">\n          <h4>Building a secure Backend For Frontend</h4>\n          <p>\n            Introduce audience to security implications while writing application code for public facing gateway services. The talk will not be a tutorial on security best practices. Instead, it will focus on building an understanding for developing secure applications and outline ways to do so\n\n            Key takeaways:\n            <ol>\n              <li>How to build secure APIs</li>\n              <li>Understand security challenges while building a BFF (Backend For Frontend)</li>\n              <li>Security as a part of development</li>\n            </ol>\n          </p>\n\n          <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/JexwKAlbJ6o\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n          <table>\n            <tbody>\n              <tr>\n                <td>Conference</td>\n                <td>JSFoo 2018</td>\n              </tr>\n              <tr>\n                <td>Date</td>\n                <td>Oct 26, 2018</td>\n              </tr>\n              <tr>\n                <td>Slides</td>\n                <td>\n                  <a href=\"https://github.com/ankit-m/talks/tree/master/jsfoo-2018\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    https://github.com/ankit-m/talks/tree/master/jsfoo-2018\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </section>\n\n        <section id=\"react-internals\">\n          <h4>React Internals</h4>\n          <p>\n            We all know React is fast, it uses VDOM, it provides lifecycle methods and what not. But what is VDOM? How does it make React fast? How does it optimize changes? Why do I need to use setState? This talk aims to answer such questions about the internal workings of React.\n\n            Following topics are covered -\n            <ol>\n              <li>React Philosophy: Understanding the core principles can help us understand why certain decisions were taken and what are the best use cases for React</li>\n              <li>Internal structure: High level overview of internal react modules and their function. This provides a mental map of where things fit in.</li>\n              <li>Stack Reconciler: Understanding the old reconciliation process, its implementation and limitations.</li>\n              <li>Fiber Reconciler: Deep dive into the implementation and benefits. Understanding the underlying computer science problems in both reconcilers.</li>\n            </ol>\n\n            The aim is not to teach how React is implemented but to give the audience a peek into internal workings of React which will help them write better code, which takes advantage of the same. It will also help them understand the reasons behind common dos and don'ts. Lastly, it would help audience appreciate the simplicity of the solution to a complex UI problem.\n          </p>\n\n          <table>\n            <tbody>\n              <tr>\n                <td>Conference</td>\n                <td>ReactFoo 2018</td>\n              </tr>\n              <tr>\n                <td>Date</td>\n                <td>Aug 18, 2018</td>\n              </tr>\n              <tr>\n                <td>Slides</td>\n                <td>\n                  <a href=\"https://github.com/ankit-m/talks/tree/master/reactfoo-2018\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    https://github.com/ankit-m/talks/tree/master/reactfoo-2018\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </section>\n      </TalksContainer>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}