{"version":3,"sources":["webpack://Ankit Muchhala/./src/components/Icon.js","webpack://Ankit Muchhala/./src/components/home/Section.js","webpack://Ankit Muchhala/./src/components/home/HomeSection.js","webpack://Ankit Muchhala/./src/components/Card.js","webpack://Ankit Muchhala/./src/components/home/BlogSection.js","webpack://Ankit Muchhala/./src/components/Badge.js","webpack://Ankit Muchhala/./src/components/home/TalkSection.js","webpack://Ankit Muchhala/./src/components/home/ComicSection.js","webpack://Ankit Muchhala/./src/components/home/FoodSection.js","webpack://Ankit Muchhala/./src/components/home/ConsultingSection.js","webpack://Ankit Muchhala/./src/pages/index.js"],"names":["iconMap","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","calendar","IconWrapper","styled","props","height","width","Icon","className","name","Section","SectionLeft","SectionRight","NextSection","Link","to","id","label","PrevSection","WavingFigure","fillRule","transform","cx","cy","r","SocialLinks","HomeSection","href","target","rel","S","layout","formats","src","quality","alt","CardWrapper","color","Card","title","children","ViewAllLink","TypingFigure","BlogCardContent","SuggestedBlogs","BlogSection","blogs","map","blog","key","slug","dateTime","date","Date","toDateString","BadgeWrapper","Badge","TalkingFigure","x","y","rx","TalkCardContent","SuggestedTalks","DrawingFigure","ComingSoon","ComicSection","CookingFigure","FoodSection","TuxFigure","ConsultingSection","data","location","allMarkdownRemark","edges","node","frontmatter","fields","active"],"mappings":"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","file":"component---src-pages-index-js-8e61991a8b3ff6d30eda.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst iconMap = {\n  \"arrow-circle-down\": (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M15 13l-3 3m0 0l-3-3m3 3V8m0 13a9 9 0 110-18 9 9 0 010 18z\"\n      />\n    </svg>\n  ),\n  \"arrow-circle-up\": (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M9 11l3-3m0 0l3 3m-3-3v8m0-13a9 9 0 110 18 9 9 0 010-18z\"\n      />\n    </svg>\n  ),\n  calendar: (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n      />\n    </svg>\n  ),\n}\nconst IconWrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  height: ${props => props.height || \"16px\"};\n  width: ${props => props.width || \"16px\"};\n\n  svg {\n    height: ${props => props.height || \"16px\"};\n    width: ${props => props.width || \"16px\"};\n  }\n`\n\nexport default function Icon(props) {\n  return (\n    <IconWrapper className={`icon ${props.className || \"\"}`} {...props}>\n      {iconMap[props.name]}\n    </IconWrapper>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nimport Icon from \"../Icon\"\n\nconst Section = styled.section`\n  height: 100vh;\n  display: flex;\n  position: relative;\n  align-items: center;\n  border-bottom: 1px solid var(--gray-300);\n  padding: 0 1.5em;\n  justify-content: center;\n\n  h1 {\n    font-weight: var(--fontWeight-black);\n    font-size: 48px;\n    letter-spacing: -1.5px;\n    margin: 1rem 0;\n  }\n\n  p {\n    font-weight: 300;\n    font-size: 18px;\n    line-height: 33px;\n    margin: 0;\n  }\n\n  .next-section,\n  .prev-section {\n    display: flex;\n    align-items: center;\n    position: absolute;\n    cursor: pointer;\n    color: var(--gray-500);\n\n    span {\n      display: inline-block;\n      margin: 0 var(--spacing-2);\n      font-size: var(--fontSize-2);\n      font-weight: var(--fontWeight-bold);\n      letter-spacing: -1px;\n    }\n\n    @media (min-width: 572px) {\n      span {\n        display: none;\n      }\n    }\n\n    svg {\n      stroke: var(--gray-500);\n    }\n\n    &:hover {\n      color: var(--gray-700);\n\n      svg {\n        stroke: var(--gray-700);\n      }\n    }\n  }\n\n  .next-section {\n    bottom: 16px;\n    right: 16px;\n  }\n\n  .prev-section {\n    bottom: 16px;\n    left: 16px;\n  }\n`\nconst SectionLeft = styled.div`\n  margin-right: 0;\n  display: none;\n\n  @media (min-width: 572px) {\n    margin-right: 72px;\n    display: block;\n  }\n`\nconst SectionRight = styled.div`\n  flex-grow: 1;\n  margin-right: 0;\n\n  @media (min-width: 572px) {\n    margin-right: 2rem;\n  }\n`\n\nfunction NextSection(props) {\n  return (\n    <Link className=\"next-section\" to={`#${props.id}`}>\n      <span className=\"accent-font\">{props.label}</span>\n      <Icon name=\"arrow-circle-down\" height=\"40px\" width=\"40px\" />\n    </Link>\n  )\n}\n\nfunction PrevSection(props) {\n  return (\n    <Link className=\"prev-section\" to={`#${props.id}`}>\n      <Icon name=\"arrow-circle-up\" height=\"40px\" width=\"40px\" />\n    </Link>\n  )\n}\n\nexport default Section\nexport { SectionLeft, SectionRight, NextSection, PrevSection }\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nimport Section, { NextSection, SectionLeft, SectionRight } from \"./Section\"\n\nfunction WavingFigure(props) {\n  return (\n    <svg viewBox=\"0 0 202 325\" {...props}>\n      <g fill=\"none\" fillRule=\"evenodd\" stroke=\"#000\">\n        <g strokeWidth={8} transform=\"translate(60.401 4)\">\n          <circle cx={52} cy={52} r={52} />\n          <path\n            strokeLinecap=\"round\"\n            d=\"M90.707 40.662C84.302 26.094 75.96 17.753 65.684 15.639\"\n          />\n        </g>\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={8}\n          d=\"M112.901 108v165M112.401 273c-21.635 3.022-34.598 18.689-38.889 47m0-.391h-10.11M114.707 273c21.43 3.032 34.27 18.75 38.519 47.154m0 0H163.4\"\n        />\n        <g strokeLinecap=\"round\">\n          <path\n            strokeWidth={8}\n            d=\"M113.995 172.538c-32.496 7.006-53.452-1.07-62.867-24.23\"\n          />\n          <path\n            strokeWidth={10}\n            d=\"M51.128 148.308c-9.94 3.372-16.183.266-18.727-9.318\"\n          />\n          <path\n            strokeWidth={8}\n            d=\"M51.91 148.308c3.32-5.336 3.32-10.772 0-16.308\"\n          />\n        </g>\n        <g strokeLinecap=\"round\">\n          <path\n            strokeWidth={8}\n            d=\"M114.807 171.462c32.497-7.006 53.452 1.07 62.867 24.23\"\n          />\n          <path\n            strokeWidth={10}\n            d=\"M177.674 195.692c9.94-3.372 16.183-.266 18.727 9.318\"\n          />\n          <path\n            strokeWidth={8}\n            d=\"M176.893 195.692c-3.321 5.336-3.321 10.772 0 16.308\"\n          />\n        </g>\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={6}\n          d=\"M22.401 132c-12.667 6.23-19 16.23-19 30\"\n        />\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={4}\n          d=\"M21.757 147.311c-10.39 9.861-13.482 21.27-9.28 34.225\"\n        />\n      </g>\n    </svg>\n  )\n}\n\nconst SocialLinks = styled.div`\n  display: flex;\n  margin-top: 2rem;\n  height: 32px;\n\n  a {\n    margin-right: 1rem;\n  }\n`\n\nexport default function HomeSection(props) {\n  return (\n    <Section id=\"home\">\n      <SectionLeft>\n        <WavingFigure height=\"320px\" />\n      </SectionLeft>\n      <SectionRight>\n        <p>Hi! I am</p>\n        <h1 className=\"text-pink accent-font\">Ankit Muchhala</h1>\n        <p>\n          I build web products. Currently, helping{' '}\n          <a href=\"https://postman.com\" target=\"_blank\" rel=\"noopener noreferrer\">Postman</a> create an API\n          platform for over 15M users. Reach out to me via -\n        </p>\n        <SocialLinks>\n          <a\n            href=\"https://twitter.com/ankit_muchhala\"\n            rel=\"noreferrer noopener\"\n            target=\"_blank\"\n          >\n            <StaticImage\n              layout=\"fixed\"\n              formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n              src=\"../../images/twitter-icon.png\"\n              width={32}\n              height={32}\n              quality={95}\n              alt=\"Twitter Profile\"\n            />\n          </a>\n          <a\n            href=\"https://github.com/ankit-m\"\n            rel=\"noreferrer noopener\"\n            target=\"_blank\"\n          >\n            <StaticImage\n              layout=\"fixed\"\n              formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n              src=\"../../images/github-icon.png\"\n              width={32}\n              height={32}\n              quality={95}\n              alt=\"Github profile page\"\n            />\n          </a>\n          <a\n            href=\"https://www.linkedin.com/in/ankitmuchhala\"\n            rel=\"noreferrer noopener\"\n            target=\"_blank\"\n          >\n            <StaticImage\n              layout=\"fixed\"\n              formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n              src=\"../../images/linkedin-icon.png\"\n              width={32}\n              height={32}\n              quality={95}\n              alt=\"LinkedIn profile page\"\n            />\n          </a>\n        </SocialLinks>\n      </SectionRight>\n      <NextSection id=\"blog\" label=\"Blog\" />\n    </Section>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst CardWrapper = styled.div`\n  border-radius: 8px;\n  border: 1px solid;\n  padding: 8px;\n  border-color: ${props =>\n    props.color ? `var(--${props.color}-light)` : \"var(--gray-600)\"};\n  cursor: pointer;\n  text-decoration: none;\n\n  &:hover {\n    border-color: ${props =>\n      props.color ? `var(--${props.color})` : \"var(--gray-800)\"};\n  }\n\n  h4 {\n    font-weight: 500;\n    margin: 0 0 8px 0;\n    opacity: 1;\n    font-size: 16px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  time {\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    color: var(--gray-600);\n    font-weight: 300;\n\n    .icon {\n      height: 12px;\n      width: 12px;\n      margin-right: 4px;\n    }\n  }\n`\n\nexport default function Card(props) {\n  return (\n    <CardWrapper className=\"card\" {...props}>\n      <h4>{props.title}</h4>\n      {props.children}\n    </CardWrapper>\n  )\n}\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport Card from \"../Card\"\nimport Icon from \"../Icon\"\n\nimport Section, {\n  NextSection,\n  SectionLeft,\n  SectionRight,\n  PrevSection,\n} from \"./Section\"\n\nconst ViewAllLink = styled(Link)`\n  margin: 32px 0 16px 0;\n  display: block;\n  text-decoration: underline;\n  color: var(--purple);\n  cursor: pointer;\n\n  &:hover {\n    color: var(--purple-dark);\n  }\n`\n\nfunction TypingFigure(props) {\n  return (\n    <svg viewBox=\"0 0 226 325\" {...props}>\n      <g fill=\"none\" fillRule=\"evenodd\" stroke=\"#000\">\n        <g strokeWidth={8} transform=\"translate(4.401 4)\">\n          <circle cx={52} cy={52} r={52} />\n          <path\n            strokeLinecap=\"round\"\n            d=\"M90.707 40.662C84.302 26.094 75.96 17.753 65.684 15.639\"\n          />\n        </g>\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={8}\n          d=\"M56.901 108v165M56.401 273c-21.635 3.022-34.598 18.689-38.889 47m0-.391H7.402M58.707 273c21.43 3.032 34.27 18.75 38.519 47.154m0 0H107.4\"\n        />\n        <g strokeLinecap=\"round\">\n          <path\n            strokeWidth={8}\n            d=\"M58.807 165.462c9.35 10.58 17.382 16.927 24.094 19.038 11.803 3.713 33.692-7.306 38.773 5.192\"\n          />\n          <path\n            strokeWidth={10}\n            d=\"M121.674 189.692c9.94-3.372 16.183-.266 18.727 9.318\"\n          />\n          <path\n            strokeWidth={8}\n            d=\"M120.893 189.692c-3.321 5.336-3.321 10.772 0 16.308\"\n          />\n        </g>\n        <g strokeLinecap=\"round\">\n          <path\n            strokeWidth={8}\n            d=\"M119.648 217.733h71.072l30.738-71.43M118.402 237H196.5m-39.049 0v67.416M141 321l16.451-16.584L170.553 321\"\n          />\n          <path\n            strokeWidth={4}\n            d=\"M176 185l15.5-2.981M196.102 148l4.438 11.952M174 170l18.61 4.598M179 157l17.102 9.368\"\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nconst BlogCardContent = styled.div`\n  display: flex;\n  align-items: center;\n\n  time {\n    margin-right: 8px;\n  }\n`\n\nconst SuggestedBlogs = styled.div`\n  .card {\n    margin-top: 16px;\n  }\n`\n\nexport default function BlogSection(props) {\n  return (\n    <Section id=\"blog\">\n      <SectionLeft>\n        <TypingFigure height=\"320px\" />\n      </SectionLeft>\n      <SectionRight>\n        <h1 className=\"text-purple accent-font\">Blog</h1>\n        <p>\n          I write about product management, web development, books and anything\n          else I find interesting. Here are a few reads -\n        </p>\n        <SuggestedBlogs>\n          {props.blogs.map(blog => (\n            <Link key={blog.id} to={`/blog${blog.slug}`}>\n              <Card title={blog.title} color=\"purple\">\n                <BlogCardContent>\n                  <time dateTime={blog.date}>\n                    <Icon name=\"calendar\" />\n                    {new Date(blog.date).toDateString()}\n                  </time>\n                  {/* <Badge>Book Review</Badge> */}\n                </BlogCardContent>\n              </Card>\n            </Link>\n          ))}\n        </SuggestedBlogs>\n        <ViewAllLink to=\"/blog\">View all blogs</ViewAllLink>\n      </SectionRight>\n      <PrevSection id=\"\" />\n      <NextSection id=\"talks\" label=\"Talks\" />\n    </Section>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst BadgeWrapper = styled.div`\n  border-radius: 8px;\n  background: var(--gray-200);\n  font-weight: 500;\n  text-transform: uppercase;\n  font-size: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 14px;\n  display: inline-block;\n  padding: 2px 8px;\n  color: var(--gray-600);\n`\n\nexport default function Badge(props) {\n  return <BadgeWrapper {...props}>{props.children}</BadgeWrapper>\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\";\n\nimport Badge from \"../Badge\"\nimport Card from \"../Card\"\nimport Icon from \"../Icon\"\n\nimport Section, {\n  NextSection,\n  PrevSection,\n  SectionLeft,\n  SectionRight,\n} from \"./Section\"\n\nfunction TalkingFigure(props) {\n  return (\n    <svg viewBox=\"0 0 255 325\" {...props}>\n      <g fill=\"none\" fillRule=\"evenodd\" stroke=\"#000\">\n        <g strokeWidth={8} transform=\"translate(33.401 4)\">\n          <circle cx={52} cy={52} r={52} />\n          <path\n            strokeLinecap=\"round\"\n            d=\"M90.707 40.662C84.302 26.094 75.96 17.753 65.684 15.639\"\n          />\n        </g>\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={8}\n          d=\"M85.901 108v165M85.401 273c-21.635 3.022-34.598 18.689-38.889 47m0-.391h-10.11M87.707 273c21.43 3.032 34.27 18.75 38.519 47.154m0 0H136.4\"\n        />\n        <g strokeLinecap=\"round\">\n          <path\n            strokeWidth={8}\n            d=\"M86.995 172.538c-32.496 7.006-53.452-1.07-62.867-24.23\"\n          />\n          <path\n            strokeWidth={10}\n            d=\"M24.128 148.308c-9.94 3.372-16.183.266-18.727-9.318\"\n          />\n          <path\n            strokeWidth={8}\n            d=\"M24.91 148.308c3.32-5.336 3.32-10.772 0-16.308\"\n          />\n        </g>\n        <g strokeLinecap=\"round\">\n          <path\n            strokeWidth={8}\n            d=\"M87.406 172.538c32.496 7.006 53.452-1.07 62.867-24.23\"\n          />\n          <path\n            strokeWidth={10}\n            d=\"M150.273 148.308c9.94 3.372 16.183.266 18.727-9.318\"\n          />\n          <path\n            strokeWidth={8}\n            d=\"M149.492 148.308c-3.321-5.336-3.321-10.772 0-16.308\"\n          />\n        </g>\n        <g transform=\"translate(182 93)\">\n          <path\n            strokeLinecap=\"round\"\n            strokeWidth={3}\n            d=\"M33.5 72.76c2.244-36.094-3.254-56.66-16.496-61.695\"\n          />\n          <rect\n            width={13}\n            height={9}\n            x={3.5}\n            y={3.5}\n            fill=\"#000\"\n            rx={4.5}\n            transform=\"rotate(24 10 8)\"\n          />\n          <path strokeLinecap=\"round\" strokeWidth={8} d=\"M0 73h69\" />\n          <path\n            strokeLinecap=\"square\"\n            strokeWidth={8}\n            d=\"M33.988 77.893V196.68\"\n          />\n          <path\n            strokeLinecap=\"round\"\n            strokeWidth={8}\n            d=\"M13.986 228l20.002-26.629L52.909 228\"\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nconst TalkCardContent = styled.div`\n  display: flex;\n  align-items: center;\n\n  time {\n    margin-right: 8px;\n  }\n`\n\nconst SuggestedTalks = styled.div`\n  .card {\n    margin-top: 16px;\n  }\n`\n\nexport default function BlogSection() {\n  return (\n    <Section id=\"talks\">\n      <SectionLeft>\n        <TalkingFigure height=\"320px\" />\n      </SectionLeft>\n      <SectionRight>\n        <h1 className=\"text-indigo accent-font\">Talks</h1>\n        <p>\n          I like to talk 😅. Sometimes there are a few people listening. Here\n          are some of my talks from various tech conferences -\n        </p>\n        <SuggestedTalks>\n          <Link to=\"/talks#rest-to-graphql\">\n            <Card title=\"From REST to GraphQL\" color=\"indigo\">\n              <TalkCardContent>\n                <time dateTime=\"2020-11-18\">\n                  <Icon name=\"calendar\" />\n                Feb 20, 2020\n              </time>\n                <Badge>GraphQL Asia 2020</Badge>\n              </TalkCardContent>\n            </Card>\n          </Link>\n\n          <Link to=\"/talks#secure-bff\">\n            <Card title=\"Building a secure Backend For Frontend\" color=\"indigo\">\n              <TalkCardContent>\n                <time dateTime=\"2020-11-18\">\n                  <Icon name=\"calendar\" />\n                Oct 26, 2018\n              </time>\n                <Badge>JSFoo 2018</Badge>\n              </TalkCardContent>\n            </Card>\n          </Link>\n\n          <Link to=\"/talks#react-internals\">\n            <Card title=\"React Internals\" color=\"indigo\">\n              <TalkCardContent>\n                <time dateTime=\"2020-11-18\">\n                  <Icon name=\"calendar\" />\n                Aug 18, 2018\n              </time>\n                <Badge>ReactFoo 2018</Badge>\n              </TalkCardContent>\n            </Card>\n          </Link>\n        </SuggestedTalks>\n      </SectionRight>\n      <PrevSection id=\"blog\" />\n      <NextSection id=\"comics\" label=\"Comics\" />\n    </Section>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Badge from \"../Badge\"\n\nimport Section, {\n  NextSection,\n  PrevSection,\n  SectionLeft,\n  SectionRight,\n} from \"./Section\"\n\nfunction DrawingFigure(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 203 325\" {...props}>\n      <g\n        fill=\"none\"\n        fillRule=\"evenodd\"\n        stroke=\"#000\"\n        transform=\"translate(4 4)\"\n      >\n        <g strokeWidth={8} transform=\"translate(.401)\">\n          <circle cx={52} cy={52} r={52} />\n          <path\n            strokeLinecap=\"round\"\n            d=\"M90.707 40.662C84.302 26.094 75.96 17.753 65.684 15.639\"\n          />\n        </g>\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={8}\n          d=\"M52.901 104v165M52.401 269c-21.635 3.022-34.598 18.689-38.889 47m0-.391H3.402M54.707 269c21.43 3.032 34.27 18.75 38.519 47.154m0 0H103.4\"\n        />\n        <g strokeLinecap=\"round\">\n          <path\n            strokeWidth={8}\n            d=\"M54.406 184.538c32.496 7.006 53.452-1.07 62.867-24.23\"\n          />\n          <path\n            strokeWidth={10}\n            d=\"M117.398 160.589c4.146-9.644 10.631-12.204 19.455-7.682\"\n          />\n        </g>\n        <path\n          strokeLinecap=\"square\"\n          strokeWidth={6}\n          d=\"M193.5 60.5l-54.5 195\"\n        />\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={6}\n          d=\"M166.25 158.737v126.858\"\n        />\n        <path\n          strokeLinejoin=\"round\"\n          strokeWidth={6}\n          d=\"M140.147 307v-21.405H190.5L191 307\"\n        />\n        <circle cx={140} cy={313} r={6} strokeWidth={4} />\n        <circle cx={191} cy={313} r={6} strokeWidth={4} />\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={3}\n          d=\"M114.96 140.904l44.08 21.808\"\n        />\n      </g>\n    </svg>\n  )\n}\n\nconst ComingSoon = styled(Badge)`\n  font-size: 1em;\n  line-height: 1.5em;\n  height: auto;\n  margin-top: 2em;\n`\n\nexport default function ComicSection() {\n  return (\n    <Section id=\"comics\">\n      <SectionLeft>\n        <DrawingFigure height=\"320px\" />\n      </SectionLeft>\n      <SectionRight>\n        <h1 className=\"text-blue accent-font\">Comics</h1>\n        <p>\n          No. I do not have a big easel where I contemplate and draw. I make\n          small comic strips about things I see in my life and find funny.\n        </p>\n        <ComingSoon>Coming soon</ComingSoon>\n      </SectionRight>\n      <PrevSection id=\"talks\" />\n      <NextSection id=\"food\" label=\"Food\" />\n    </Section>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Badge from \"../Badge\"\n\nimport Section, {\n  NextSection,\n  PrevSection,\n  SectionLeft,\n  SectionRight,\n} from \"./Section\"\n\nfunction CookingFigure(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 199 374\" {...props}>\n      <g fill=\"none\" fillRule=\"evenodd\" stroke=\"#000\">\n        <g strokeWidth={8} transform=\"translate(14.401 53)\">\n          <circle cx={52} cy={52} r={52} />\n          <path\n            strokeLinecap=\"round\"\n            d=\"M90.707 40.662C84.302 26.094 75.96 17.753 65.684 15.639\"\n          />\n        </g>\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={8}\n          d=\"M66.901 157v165M66.401 322c-21.635 3.022-34.598 18.689-38.889 47m0-.391h-10.11M68.707 322c21.43 3.032 34.27 18.75 38.519 47.154m0 0H117.4\"\n        />\n        <g strokeLinecap=\"round\">\n          <path\n            strokeWidth={8}\n            d=\"M68.406 237.538c32.496 7.006 53.452-1.07 62.867-24.23\"\n          />\n          <path\n            strokeWidth={10}\n            d=\"M131.273 213.308c9.94 3.372 16.183.266 18.727-9.318\"\n          />\n          <path\n            strokeWidth={8}\n            d=\"M130.492 213.308c-3.321-5.336-3.321-10.772 0-16.308\"\n          />\n        </g>\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={10}\n          d=\"M112.314 181.326c26.42 14.883 53.453 14.883 81.1 0\"\n        />\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={5}\n          d=\"M148.864 171.895c-8.07-3.02-9.024-11.303-2.864-24.848 6.16-13.544 7.115-23.596 2.864-30.155\"\n        />\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={3}\n          d=\"M166.864 164.004c-8.07-3.021-9.024-11.304-2.864-24.849 6.16-13.544 7.115-23.596 2.864-30.155\"\n        />\n        <path\n          strokeLinejoin=\"round\"\n          strokeWidth={3}\n          d=\"M14.401 41.181l13.145 15.47 23.08-9.796-1.366-18.918c1.869-1.503 3.478-4.256 4.827-8.258C56.11 13.675 52.075 7.01 45.62 6.058c-4.303-.635-8.155 1.645-11.554 6.841C30.93 3.152 25.898-.25 18.973 2.688c-6.925 2.94-7.685 9.38-2.28 19.322-7.267-4.588-12.022-2.612-14.265 5.927-2.243 8.54 1.748 12.954 11.973 13.244z\"\n        />\n        <path\n          fill=\"#000\"\n          d=\"M21.21 48.768l28.629-10.96.787 9.047-23.08 9.797z\"\n        />\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={2}\n          d=\"M10.479 26.314c-2.202 1.919-2.414 3.933-.635 6.042\"\n        />\n      </g>\n    </svg>\n  )\n}\n\nconst ComingSoon = styled(Badge)`\n  font-size: 1em;\n  line-height: 1.5em;\n  height: auto;\n  margin-top: 2em;\n`\n\nexport default function FoodSection() {\n  return (\n    <Section id=\"food\">\n      <SectionLeft>\n        <CookingFigure height=\"320px\" />\n      </SectionLeft>\n      <SectionRight>\n        <h1 className=\"text-teal accent-font\">Food</h1>\n        <p>\n          Given an option between cooking an eating, I would go for the latter.\n          I <strong>love</strong> eating food. I will post photos, videos,\n          recipes and reviews of things I eat.\n        </p>\n        <ComingSoon>Coming soon</ComingSoon>\n      </SectionRight>\n      <PrevSection id=\"comics\" />\n      <NextSection id=\"consulting\" label=\"Consulting\" />\n    </Section>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport Section, { PrevSection, SectionLeft, SectionRight } from \"./Section\"\nimport Badge from \"../Badge\"\n\nconst ComingSoon = styled(Badge)`\n  font-size: 1em;\n  line-height: 1.5em;\n  height: auto;\n  margin-top: 2em;\n`\n\nfunction TuxFigure(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 144 325\" {...props}>\n      <g fill=\"none\" fillRule=\"evenodd\" stroke=\"#000\">\n        <g strokeWidth={8} transform=\"translate(18.401 4)\">\n          <circle cx={52} cy={52} r={52} />\n          <path\n            strokeLinecap=\"round\"\n            d=\"M90.707 40.662C84.302 26.094 75.96 17.753 65.684 15.639\"\n          />\n        </g>\n        <path\n          strokeLinecap=\"round\"\n          strokeWidth={8}\n          d=\"M70.901 108v165M70.401 273c-21.635 3.022-34.598 18.689-38.889 47m0-.391h-10.11M72.707 273c21.43 3.032 34.27 18.75 38.519 47.154m0 0H121.4\"\n        />\n        <g strokeLinecap=\"round\">\n          <path\n            strokeWidth={8}\n            d=\"M66.34 166.597c-32.535 6.817-48.394 22.719-47.576 47.705\"\n          />\n          <path\n            strokeWidth={10}\n            d=\"M18.764 214.302c-10.452.963-14.892 6.34-13.318 16.13\"\n          />\n          <path\n            strokeWidth={8}\n            d=\"M19.478 213.985c5.204 3.524 7.415 8.49 6.633 14.898\"\n          />\n        </g>\n        <g strokeLinecap=\"round\">\n          <path\n            strokeWidth={8}\n            d=\"M77.66 166.597c32.535 6.817 48.394 22.719 47.576 47.705\"\n          />\n          <path\n            strokeWidth={10}\n            d=\"M125.236 214.302c10.452.963 14.892 6.34 13.318 16.13\"\n          />\n          <path\n            strokeWidth={8}\n            d=\"M124.522 213.985c-5.204 3.524-7.415 8.49-6.633 14.898\"\n          />\n        </g>\n        <path\n          fill=\"#000\"\n          strokeLinejoin=\"round\"\n          strokeWidth={4}\n          d=\"M93.662 111.576c1.877 5.626 2.815 9.973 2.815 13.043 0 3.07-.938 7.417-2.815 13.043l-23.238-13.043 23.238-13.043z\"\n        />\n        <path\n          fill=\"#000\"\n          strokeLinejoin=\"round\"\n          strokeWidth={4}\n          d=\"M47.424 111.576c-2.043 5.633-3.064 9.98-3.064 13.043 0 3.062 1.021 7.41 3.064 13.043l15.16-8.51 8.078-4.533-23.238-13.043z\"\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport default function ConsultingSection() {\n  return (\n    <Section id=\"consulting\">\n      <SectionLeft>\n        <TuxFigure height=\"320px\" />\n      </SectionLeft>\n      <SectionRight>\n        <h1 className=\"text-green accent-font\">Consulting</h1>\n        <p>\n          I've worked as an engineer, tech lead and product manager at one of\n          the world's fastest growing SaaS unicorn (Postman). With over 6 years of\n          experience in building web products, I can help your team design and develop\n          the next big thing on the web.\n          <br />\n        </p>\n        <ComingSoon>Coming soon</ComingSoon>\n      </SectionRight>\n      <PrevSection id=\"food\" />\n    </Section>\n  )\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport HomeSection from \"../components/home/HomeSection\"\nimport BlogSection from \"../components/home/BlogSection\"\nimport TalkSection from \"../components/home/TalkSection\"\nimport Layout from \"../components/layout\"\nimport ComicSection from \"../components/home/ComicSection\"\nimport FoodSection from \"../components/home/FoodSection\"\nimport ConsultingSection from \"../components/home/ConsultingSection\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const blogs = data.allMarkdownRemark.edges.map(d => ({\n    id: d.node.id,\n    title: d.node.frontmatter.title,\n    date: d.node.frontmatter.date,\n    slug: d.node.fields.slug,\n  }))\n\n  return (\n    <Layout active=\"home\" location={location}>\n      <Seo title=\"Home\" />\n      <HomeSection />\n      <BlogSection blogs={blogs} />\n      <TalkSection />\n      <ComicSection />\n      <FoodSection />\n      <ConsultingSection />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 3\n      sort: { order: DESC, fields: frontmatter___date }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}